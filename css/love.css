* {
    margin: 0;
    padding: 0;
    border: 0;
}

html, body {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
    font-family: 'Arial', sans-serif;
    overflow: hidden;
    perspective: 1000px;
}

body {
    overflow: hidden;
    position: relative;
}

/* 动态星空背景 */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(2px 2px at 20px 30px, #eee, transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.8), transparent),
        radial-gradient(1px 1px at 90px 40px, #fff, transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.6), transparent),
        radial-gradient(2px 2px at 160px 30px, #ddd, transparent);
    background-repeat: repeat;
    background-size: 200px 100px;
    animation: twinkle 20s linear infinite;
    z-index: -1;
}

@keyframes twinkle {
    0% { transform: translateY(0); }
    100% { transform: translateY(-100px); }
}

.container {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

/*---------------------- body_left -------------------------*/
.body_left {
    width: 300px;
    height: 300px;
    left: 0;
    bottom: 110px;
    position: absolute;
    z-index: 98;
}

/*---------------------- body_center -------------------------*/
.container .love {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* 3D爱心容器 */
.heart-3d-container {
    position: relative;
    width: 400px;
    height: 400px;
    transform-style: preserve-3d;
    animation: containerRotate 20s linear infinite;
}

@keyframes containerRotate {
    0% { transform: rotateY(0deg) rotateX(15deg); }
    100% { transform: rotateY(360deg) rotateX(15deg); }
}

/* 3D爱心主体 */
.heart-3d {
    position: absolute;
    width: 200px;
    height: 200px;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    transform-style: preserve-3d;
    animation: heartBeat 1.5s ease-in-out infinite;
}

@keyframes heartBeat {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.1); }
}

/* 爱心各个面 */
.heart-3d > div {
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #ff6b9d, #c44569, #ff4757);
    border-radius: 50%;
    box-shadow: 
        inset 0 0 20px rgba(255, 255, 255, 0.3),
        0 0 30px rgba(255, 107, 157, 0.6);
}

.heart-front {
    transform: translateZ(100px);
    background: linear-gradient(45deg, #ff6b9d, #c44569);
}

.heart-back {
    transform: translateZ(-100px);
    background: linear-gradient(45deg, #c44569, #ff4757);
}

.heart-left {
    transform: rotateY(-90deg) translateZ(100px);
    background: linear-gradient(45deg, #ff6b9d, #ff4757);
}

.heart-right {
    transform: rotateY(90deg) translateZ(100px);
    background: linear-gradient(45deg, #c44569, #ff6b9d);
}

.heart-top {
    transform: rotateX(90deg) translateZ(100px);
    background: linear-gradient(45deg, #ff6b9d, #c44569);
}

.heart-bottom {
    transform: rotateX(-90deg) translateZ(100px);
    background: linear-gradient(45deg, #ff4757, #ff6b9d);
}

/* 粒子系统 */
.particle-system {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
}

.particle-layer {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
}

.layer-1 { animation: layerRotate 8s linear infinite; }
.layer-2 { animation: layerRotate 12s linear infinite reverse; }
.layer-3 { animation: layerRotate 16s linear infinite; }

@keyframes layerRotate {
    0% { transform: rotateY(0deg) rotateX(0deg); }
    100% { transform: rotateY(360deg) rotateX(360deg); }
}

.particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: radial-gradient(circle, #fff, #ff6b9d);
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    animation: particleFloat 6s ease-in-out infinite;
}

.particle:nth-child(1) { left: 10%; top: 20%; animation-delay: 0s; }
.particle:nth-child(2) { left: 80%; top: 30%; animation-delay: 1s; }
.particle:nth-child(3) { left: 20%; top: 70%; animation-delay: 2s; }
.particle:nth-child(4) { left: 70%; top: 80%; animation-delay: 3s; }
.particle:nth-child(5) { left: 50%; top: 10%; animation-delay: 4s; }
.particle:nth-child(6) { left: 40%; top: 90%; animation-delay: 5s; }

@keyframes particleFloat {
    0%, 100% { 
        transform: translateZ(0) scale(1);
        opacity: 0.8;
    }
    50% { 
        transform: translateZ(50px) scale(1.5);
        opacity: 1;
    }
}

/* 光环效果 */
.heart-auras {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.aura {
    position: absolute;
    border: 2px solid rgba(255, 107, 157, 0.3);
    border-radius: 50%;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    animation: auraExpand 4s ease-in-out infinite;
}

.aura-1 {
    width: 250px;
    height: 250px;
    animation-delay: 0s;
}

.aura-2 {
    width: 300px;
    height: 300px;
    animation-delay: 1.3s;
}

.aura-3 {
    width: 350px;
    height: 350px;
    animation-delay: 2.6s;
}

@keyframes auraExpand {
    0% { 
        transform: translate(-50%, -50%) scale(0.8);
        opacity: 0.8;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.2);
        opacity: 0.4;
    }
    100% { 
        transform: translate(-50%, -50%) scale(0.8);
        opacity: 0.8;
    }
}

/* 心跳脉冲 */
.heartbeat-pulse {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    border: 3px solid rgba(255, 107, 157, 0.6);
    border-radius: 50%;
    animation: heartbeatPulse 1.5s ease-in-out infinite;
}

@keyframes heartbeatPulse {
    0% { 
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
    100% { 
        transform: translate(-50%, -50%) scale(1.8);
        opacity: 0;
    }
}

/* 浮动文字 */
.floating-text {
    position: absolute;
    bottom: -120px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 15px;
}

.text-char {
    font-size: 32px;
    font-weight: bold;
    color: #ff6b9d;
    text-shadow: 0 0 20px rgba(255, 107, 157, 0.8);
    animation: textFloat 3s ease-in-out infinite;
    cursor: pointer;
    transition: all 0.3s ease;
}

.text-char:hover {
    transform: scale(1.2);
    text-shadow: 0 0 30px rgba(255, 107, 157, 1);
}

.text-char:nth-child(1) { animation-delay: 0s; }
.text-char:nth-child(2) { animation-delay: 0.5s; }
.text-char:nth-child(3) { animation-delay: 1s; }
.text-char:nth-child(4) { animation-delay: 1.5s; }

@keyframes textFloat {
    0%, 100% { 
        transform: translateY(0);
        text-shadow: 0 0 20px rgba(255, 107, 157, 0.8);
    }
    50% { 
        transform: translateY(-10px);
        text-shadow: 0 0 30px rgba(255, 107, 157, 1);
    }
}

/*---------------------- footer -------------------------*/
@keyframes border {
    0% { width: 0; }
    5% { width: 5%; }
    10% { width: 10%; }
    15% { width: 15%; }
    20% { width: 20%; }
    25% { width: 25%; }
    30% { width: 30%; }
    35% { width: 35%; }
    40% { width: 40%; }
    45% { width: 45%; }
    50% { width: 50%; }
    55% { width: 55%; }
    60% { width: 60%; }
    65% { width: 65%; }
    70% { width: 70%; }
    75% { width: 75%; }
    80% { width: 80%; }
    85% { width: 85%; }
    90% { width: 90%; }
    95% { width: 95%; }
    100% { width: 100%; }
}

.footer {
    bottom: 30px;
    position: relative;
    z-index: 99;
}

.footer .border .border-top {
    border-top: 3px solid black;
    transform-origin: left center;
    animation: border 12s linear;
    animation-fill-mode: both;
}

.footer .border .border-bottom {
    float: right;
    border-top: 3px solid red;
    transform-origin: right center;
    animation: border 7s linear 12s;
    animation-fill-mode: both;
}

.footer .copyright {
    width: 100%;
    height: 30px;
    position: absolute;
    bottom: -30px;
    text-align: center;
}

.copyright div {
    width: 30%;
    line-height: 30px;
    display: inline-block;
}

.copyright div span {
    color: dimgray;
}

/* 全屏覆盖层与基础布局（保证占满视口） */
.intro-overlay {
    position: fixed;
    left: 0; top: 0; right: 0; bottom: 0;
    width: 100vw;
    height: 100vh;
    background: #ffffff;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
    transition: opacity 600ms ease;
}
.intro-overlay.hidden { opacity: 0; pointer-events: none; }

/* Envelope 全屏自适应：使用视口尺寸为基准 */
.envelope {
    position: relative;
    width: 100vw;
    height: 100vh;
    max-width: 100vw;
    max-height: 100vh;
    perspective: 1400px;
    cursor: pointer;
}

/* 主题变量（可调整视觉风格） */
:root {
    --env-bg: #fafafa;
    --env-front: #ffffff;
    --env-front-2: #f7f7f7;
    --env-border: #e5e5e5;
    --env-radius: 16px;
    --shadow: 0 24px 64px rgba(0,0,0,0.12);
    --heart-1: #ff6b9d; /* 柔粉 */
    --heart-2: #ff3b6c; /* 玫红 */
    --heart-3: #e11d48; /* 深红 */
}

/* 信封前后板（充满全屏） */
.envelope-back, .envelope-front {
    position: absolute;
    left: 4vw; right: 4vw; top: 6vh; bottom: 6vh; /* 留出一点边距更美观 */
    background: var(--env-bg);
    border: 2px solid var(--env-border);
    border-radius: var(--env-radius);
    box-shadow: var(--shadow);
}
.envelope-front { background: linear-gradient(180deg, var(--env-front) 0%, var(--env-front-2) 100%); }

/* --- 修复层级与阴影可见性（覆盖） --- */
.envelope-back { z-index: 1 !important; }
.envelope-front { z-index: 2 !important; }
.envelope-letter { z-index: 3 !important; }
.envelope-flap { z-index: 4 !important; position: absolute; }

/* 使用 drop-shadow 避免阴影被裁剪，且更贴合三角形形状 */
.envelope-flap {
    box-shadow: 0 14px 28px rgba(0,0,0,0.12), inset 0 -8px 18px rgba(0,0,0,0.08);
    filter: drop-shadow(0 22px 28px rgba(0,0,0,0.18));
}
.intro-overlay.open .envelope-flap {
    box-shadow: 0 26px 44px rgba(0,0,0,0.18), inset 0 -10px 22px rgba(0,0,0,0.06);
    filter: drop-shadow(0 28px 36px rgba(0,0,0,0.22));
}

/* 封口盖（三角形），相对于前后板区域定位 */
.envelope-flap {
    position: absolute;
    left: 4vw; right: 4vw; top: 6vh;
    height: clamp(36vh, 42vh, 48vh);
    background: linear-gradient(180deg, #fff 0%, #f3f3f3 100%);
    clip-path: polygon(0 0, 100% 0, 50% 100%);
    border-left: 2px solid var(--env-border);
    border-right: 2px solid var(--env-border);
    border-top: 2px solid var(--env-border);
    border-top-left-radius: var(--env-radius);
    border-top-right-radius: var(--env-radius);
    transform-origin: top center;
    transform: rotateX(0deg);
    z-index: 3;
    transition: transform 1200ms cubic-bezier(.2,.7,.2,1);
    box-shadow: 0 12px 24px rgba(0,0,0,0.10), /* 盖子自身的柔和阴影 */
                inset 0 -8px 18px rgba(0,0,0,0.08); /* 盖子内缘暗部加强体积 */
}
/* 顶部微高光与下缘投影（叠加层） */
.envelope-flap::after {
    content: '';
    position: absolute;
    left: 0; right: 0; top: 0; bottom: 0;
    border-top-left-radius: var(--env-radius);
    border-top-right-radius: var(--env-radius);
    /* 上缘高光 + 下缘暗影渐变，增加厚度感 */
    background: linear-gradient( to bottom, rgba(255,255,255,0.85) 0%, rgba(255,255,255,0.0) 20% ),
                linear-gradient( to bottom, rgba(0,0,0,0.00) 70%, rgba(0,0,0,0.10) 100% );
    pointer-events: none;
}
/* 开启状态：盖子上翻后，阴影方向与强度微调，更符合透视 */
.intro-overlay.open .envelope-flap {
    box-shadow: 0 24px 40px rgba(0,0,0,0.16), inset 0 -10px 22px rgba(0,0,0,0.06);
}
.intro-overlay.open .envelope-flap::after {
    background: linear-gradient( to bottom, rgba(255,255,255,0.70) 0%, rgba(255,255,255,0.0) 25% ),
                linear-gradient( to bottom, rgba(0,0,0,0.00) 65%, rgba(0,0,0,0.14) 100% );
}

/* 信纸略小于信封，可见于开口下方 */
.envelope-letter {
    position: absolute;
    left: calc(4vw + 4%); right: calc(4vw + 4%);
    top: calc(6vh + clamp(28vh, 30vh, 34vh)); /* 下移，避免被盖住 */
    bottom: calc(6vh + 6%);
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 18px 48px rgba(0,0,0,0.10);
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2.5vh 3vw;
    transform: translateY(0);
    transition: transform 1200ms ease, opacity 800ms ease;
    opacity: 1;
}

/* 信纸内容容器：居中布局，保证心与文字在屏幕中心 */
.envelope-letter {
    display: grid !important;
    place-items: center !important;
    text-align: center !important;
}

/* flap 外阴影置于 letter 之上：提升 flap z-index，禁止 letter 创建新 stacking context */
.envelope-letter {
    isolation: auto; /* 默认不新建 stacking context */
    z-index: 3 !important;
}
.envelope-flap {
    z-index: 5 !important;
    position: absolute !important;
    filter: drop-shadow(0 28px 36px rgba(0,0,0,0.22)); /* 强化外阴影 */
}
/* 避免 letter 使用过滤器/透明度创建 stacking context 覆盖阴影 */
.envelope-letter { filter: none !important; opacity: 1 !important; }

/* 信纸文字（自适应） */
.letter-text {
    font-family: 'IntroSerif', 'Times New Roman', serif;
    font-size: clamp(18px, 2.6vmin, 30px);
    color: #333;
    letter-spacing: .18em;
    text-align: center;
    line-height: 1.45;
    user-select: none;
}

/* 覆盖：使用动态 heart2.png 替代伪元素爱心 */
/* 放大并防闪烁：heart2.png */
.letter-heart, .envelope > .letter-heart {
    width: clamp(40px, 6vmin, 80px);
    height: clamp(40px, 6vmin, 80px);
    margin-bottom: 16px;
    background-image: url("../images/heart2.png");
    background-position: center center;
    background-repeat: no-repeat;
    background-size: contain; /* 等比缩放，避免拉伸导致边缘显形 */
    background-color: transparent; /* 确保底色透明 */
    box-shadow: none; /* 去除方形阴影边框 */
    filter: none; /* 避免滤镜影响透明区域 */
}
/* 移除旧的圆形伪元素视觉干扰 */
.letter-heart::before, .letter-heart::after { content: none !important; }

/* 放大与上移：封面心形（直接子级） */
.envelope > .letter-heart {
    position: absolute;
    left: 50%;
    top: calc(6vh + 4%); /* 更靠上，位于封口下方 */
    transform: translateX(-50%);
    width: clamp(80px, 10vmin, 140px);
    height: clamp(80px, 10vmin, 140px);
    background-image: url("../images/heart2.png");
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    background-color: transparent;
}

/* 放大：信纸内的心形 */
.envelope-letter .letter-heart {
    width: clamp(48px, 7vmin, 96px);
    height: clamp(48px, 7vmin, 96px);
    margin-bottom: 18px;
}

/* 点击后：缓慢打开封口、信纸微上提，随后整体淡出（JS控制 .open/.hidden） */
.intro-overlay.open .envelope-flap { transform: rotateX(-145deg); }
.intro-overlay.open .envelope-letter { transform: translateY(-6%); }

/* 键盘可访问性：获得焦点时给出可见轮廓 */
.intro-overlay:focus-visible { outline: 3px solid rgba(233, 30, 99, 0.65); outline-offset: 4px; }

/* 减少动画偏好：降低动效强度 */
@media (prefers-reduced-motion: reduce) {
    .intro-overlay { transition: none; }
    .envelope-flap, .envelope-letter { transition: none; }
}

/* 超宽与超高比例自适配（保持内容不被裁切） */
@media (min-aspect-ratio: 21/9) {
    .envelope-back, .envelope-front, .envelope-flap, .envelope-letter { left: 8vw; right: 8vw; }
}
@media (max-aspect-ratio: 9/16) {
    .envelope-back, .envelope-front, .envelope-flap { left: 3vw; right: 3vw; }
    .envelope-letter { left: 6vw; right: 6vw; }
}

/* 确保父容器不裁剪阴影 */
.intro-overlay, .envelope { overflow: visible !important; }

/* 遮罩中的 GIF 与延迟文字 */
.intro-gif {
    width: min(60vw, 70vmin);
    height: auto;
    display: block;
    margin: 2vh auto 2vh;
    image-rendering: auto;
}
/* 文案默认隐藏，结束后才显示 */
.letter-text { opacity: 0; pointer-events: none; transition: opacity 400ms ease; }
.intro-overlay.ready .letter-text { opacity: 1; pointer-events: auto; }

/* 避免覆盖层在锁定时接收点击 */
.intro-overlay.locked { cursor: default; }
.intro-overlay.locked::after { content: ''; position: absolute; inset: 0; }

/* ===== 覆盖：信件尺寸与位置、GIF 布局、全屏与自适应文字 ===== */
/* 全屏信封（再次确保） */
.intro-overlay {
    position: fixed !important;
    left: 0; top: 0; right: 0; bottom: 0;
    width: 100vw !important;
    height: 100vh !important;
}
.envelope {
    position: relative !important;
    width: 100vw !important;
    height: 100vh !important;
}

/* 信件略小于信封，模拟真实信件效果（80% 尺寸，10% 居中偏移） */
.envelope-letter {
    position: absolute !important;
    width: 80% !important;
    height: 80% !important;
    top: 10% !important;
    left: 10% !important;
    right: auto !important;
    bottom: auto !important;
}

/* 文字大小自适应 */
.envelope-letter .letter-text {
    font-size: clamp(16px, 4vw, 24px) !important;
}

/* GIF 大小与位置：宽 150px，自适应；在信封左下角，不遮挡中心内容 */
.intro-gif {
    position: absolute !important;
    left: 6% !important;
    bottom: 6% !important;
    width: 150px !important;
    max-width: 80% !important;
    height: auto !important;
}

/* ===== 修复：信件尺寸限定在信封内、内容可见、GIF 左下角 ===== */
/* 信封可视内边距：back/front 使用 left:4vw/right:4vw/top:6vh/bottom:6vh
   将 letter 计算为该可视区域的 80%，并偏移 10% 实现居中 */
.envelope-letter {
    position: absolute !important;
    left: calc(4vw + ( (100vw - 8vw) * 0.10 )) !important;
    top: calc(6vh + ( (100vh - 12vh) * 0.10 )) !important;
    width: calc( (100vw - 8vw) * 0.80 ) !important;
    height: calc( (100vh - 12vh) * 0.80 ) !important;
    right: auto !important;
    bottom: auto !important;
    display: grid !important;
    place-items: center !important;
    text-align: center !important;
    overflow: visible !important;
    z-index: 3 !important; /* 在 front 之上，在 flap 之下 */
}
/* 确保内容位于中心层级之上，不被 GIF 遮挡 */
.envelope-letter .letter-heart,
.envelope-letter .letter-text { position: relative; z-index: 2; }

/* GIF 左下角、固定大小且保持宽高比，避免遮挡中心 */
.intro-gif {
    position: absolute !important;
    left: 4% !important;
    bottom: 4% !important;
    width: 150px !important;
    max-width: 80% !important;
    height: auto !important;
    z-index: 1 !important; /* 低于文字与爱心 */
}

/* ===== 结构重构后的基础定位 ===== */
.envelope {
    position: relative !important;
    width: 100vw !important;
    height: 100vh !important;
}
.envelope-viewport {
    position: absolute;
    left: 0; top: 0; right: 0; bottom: 0;
}
/* 面板区域保持统一边距 */
.envelope-back, .envelope-front, .envelope-flap, .envelope-letter {
    position: absolute;
    left: 4vw; right: 4vw; top: 6vh; bottom: 6vh;
    border-radius: var(--env-radius);
}
.envelope-back { z-index: 1; }
.envelope-front { z-index: 2; background: linear-gradient(180deg, var(--env-front) 0%, var(--env-front-2) 100%); border: 2px solid var(--env-border); box-shadow: var(--shadow); }
.envelope-flap { z-index: 5; border-top-left-radius: var(--env-radius); border-top-right-radius: var(--env-radius); clip-path: polygon(0 0, 100% 0, 50% 100%); transform-origin: top center; transition: transform 1200ms cubic-bezier(.2,.7,.2,1); filter: drop-shadow(0 28px 36px rgba(0,0,0,0.22)); border-left: 2px solid var(--env-border); border-right: 2px solid var(--env-border); border-top: 2px solid var(--env-border); background: linear-gradient(180deg, #fff 0%, #f3f3f3 100%); }
.envelope-letter { z-index: 3; background:#fff; border: 2px solid var(--env-border); box-shadow: 0 18px 48px rgba(0,0,0,0.10); display: grid; }

/* 信纸内容与 GIF 分区：内容居中，GIF 左下角 */
.letter-content { display: grid; place-items: center; text-align: center; }
.letter-content .letter-heart { position: relative; z-index: 2; width: clamp(48px, 7vmin, 96px); height: clamp(48px, 7vmin, 96px); margin-bottom: 18px; background: url("../images/heart2.png") center/contain no-repeat; }
.letter-content .letter-text { position: relative; z-index: 2; font-size: clamp(16px, 4vw, 24px); }
.envelope-letter .intro-gif { position: absolute; left: 4%; bottom: 4%; width: 150px; max-width: 80%; height: auto; z-index: 1; }

/* 打开态 */
.intro-overlay.open .envelope-flap { transform: rotateX(-145deg); }

/* ===== 对齐修正：让封口尖端与信纸顶部对齐 ===== */
/* 面板可视区域高度 H = (100vh - 12vh)。
   信纸顶部位置 = top: 6vh + H * 0.10。
   为使封口尖端（在 flap 盒子底部）恰好等于该位置，设置 flap 的 bottom：
   bottom = 100vh - (6vh + H * 0.10) = 6vh + H * 0.90。
*/
.envelope-flap {
    left: 4vw !important;
    right: 4vw !important;
    top: 6vh !important;
    bottom: calc(6vh + ((100vh - 12vh) * 0.90)) !important; /* 仅占上方 10% 高度，尖端与信纸顶对齐 */
    clip-path: polygon(0 0, 100% 0, 50% 100%) !important;
}

/* 信纸在可视区域内 80% 居中（与之前规则一致，确保未被其他定义覆盖） */
.envelope-letter {
    left: calc(4vw + ((100vw - 8vw) * 0.10)) !important;
    top: calc(6vh + ((100vh - 12vh) * 0.10)) !important;
    width: calc((100vw - 8vw) * 0.80) !important;
    height: calc((100vh - 12vh) * 0.80) !important;
}

/* 层级再次确认：back(1) < front(2) < letter(3) < flap(5) */
.envelope-back { z-index: 1 !important; }
.envelope-front { z-index: 2 !important; }
.envelope-letter { z-index: 3 !important; }
.envelope-flap { z-index: 5 !important; }

/* ===== 修复：envelope-letter 左右对称对齐 ===== */
.envelope-letter {
    /* 以内层可视宽度 (100vw - 8vw) 为基准，宽度取 80%，水平居中 */
    width: calc((100vw - 8vw) * 0.80) !important;
    left: calc(4vw + ((100vw - 8vw) * 0.50)) !important; /* 可视区域中心 */
    transform: translateX(-50%) !important; /* 水平居中 */
    right: auto !important; /* 移除之前的 right 参与，避免累加误差 */
    box-sizing: border-box !important; /* 包含 2px 边框，避免右侧视觉更长 */
}

/* ===== 将 heart2.png 层级提升到 flap 之上（不改高度） ===== */
.envelope-viewport { position: absolute; left: 0; top: 0; right: 0; bottom: 0; }
.envelope-viewport::before {
    content: '';
    position: absolute;
    left: 50%;
    top: calc(6vh + 4%); /* 与现有位置一致，可按需微调 */
    transform: translateX(-50%);
    width: clamp(48px, 7vmin, 96px);  /* 使用与 .letter-content .letter-heart 相同的尺寸 */
    height: clamp(48px, 7vmin, 96px);
    background: url("../images/heart2.png") center/contain no-repeat;
    z-index: 6; /* 高于 flap(z-index:5) */
    pointer-events: none;
}
/* 隐藏信纸内的心形，避免重复显示（只改变层级，不改变原尺寸设定） */
.envelope-letter .letter-heart { visibility: hidden; }

/* ===== 精确定位 heart2.png 到封口尖端正下方 ===== */
.envelope-viewport::before {
    /* 基准：信纸顶部（即封口尖端所在的纵向线）再下移少量，让心形位于尖端下方可见 */
    top: calc(6vh + ((100vh - 12vh) * 0.10) + 29vh) !important;
    left: 50% !important;
    transform: translateX(-50%) !important; /* 顶部对齐，无垂直居中偏差 */
    transform-origin: top center !important;
}

/* 3D 心容器尺寸居中 */
#heart3d {
    width: 100%;
    height: 100%;
    position: relative;
}
.body_center.love { position: relative; display: flex; align-items: center; justify-content: center; overflow: visible; }

/* 解锁后：文字/内容层级提升，确保在 flap 之上可见 */
.intro-overlay.ready .letter-content { position: relative; z-index: 6 !important; }
.intro-overlay.ready .letter-text { opacity: 1 !important; pointer-events: auto !important; }

/* 音频可视化画布：与爱心同容器层级，覆盖底部至顶部（不再 fixed） */
#audioCanvas {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: auto; /* 不再覆盖整个容器 */
    width: 100%;
    height: 22%; /* 底部区域显示曲线 */
    min-height: 110px; /* 小屏保障可见高度 */
    z-index: 4;
    pointer-events: none;
    background: transparent;
    box-shadow: none;
    backdrop-filter: none;
}

/* 确保 heart3d 在画布下方，但同层叠上下文 */
#heart3d { z-index: 3; }

/* 可爱淡粉色信封背板 */
.envelope-front {
    background: #ffe3ed !important; /* 淡粉 */
    border: 2px solid var(--env-border);
    border-radius: var(--env-radius);
    box-shadow: var(--shadow);
}
.envelope-flap {
    background: #ffe3ed !important; /* 淡粉 */
    border: 2px solid var(--env-border);
    border-radius: var(--env-radius);
    box-shadow: var(--shadow);
}

/* 歌词展示面板（右侧，纵向两句） */
.lyrics-panel {
    position: fixed;
    right: 18px;
    top: 50%;
    transform: translateY(-50%);
    width: min(28vw, 380px);
    min-width: 260px;
    padding: 18px 16px;
    border-radius: 14px;
    background: rgba(255, 255, 255, 0.12);
    box-shadow: 0 10px 30px rgba(0,0,0,0.12);
    backdrop-filter: blur(6px);
    z-index: 8;
}
.lyric-line {
    font-size: clamp(14px, 1.8vmin, 18px);
    line-height: 1.6;
    color: #ffffff;
    text-shadow: 0 2px 8px rgba(0,0,0,0.35);
    white-space: pre-wrap;
    word-break: break-word;
    margin: 6px 0;
    opacity: 0.7;
}
.lyric-line.current { opacity: 1; font-weight: 600; color: #ffe3ed; }
.lyric-line.next { opacity: 0.85; }

@media (max-width: 820px){
    .lyrics-panel { right: 10px; width: 44vw; min-width: 220px; padding: 14px 12px; }
    .lyric-line { font-size: clamp(13px, 2.6vmin, 16px); }
}
